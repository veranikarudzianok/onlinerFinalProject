{"name": "test_navigation_bar", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=116.0.5845.111)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6D1D852A2+57122]\n\t(No symbol) [0x00007FF6D1CFEA92]\n\t(No symbol) [0x00007FF6D1BCE3AB]\n\t(No symbol) [0x00007FF6D1BAE1B9]\n\t(No symbol) [0x00007FF6D1C2B417]\n\t(No symbol) [0x00007FF6D1C3E24F]\n\t(No symbol) [0x00007FF6D1C26DB3]\n\t(No symbol) [0x00007FF6D1BFD2B1]\n\t(No symbol) [0x00007FF6D1BFE494]\n\tGetHandleVerifier [0x00007FF6D202EF82+2849794]\n\tGetHandleVerifier [0x00007FF6D2081D24+3189156]\n\tGetHandleVerifier [0x00007FF6D207ACAF+3160367]\n\tGetHandleVerifier [0x00007FF6D1E16D06+653702]\n\t(No symbol) [0x00007FF6D1D0A208]\n\t(No symbol) [0x00007FF6D1D062C4]\n\t(No symbol) [0x00007FF6D1D063F6]\n\t(No symbol) [0x00007FF6D1CF67A3]\n\tBaseThreadInitThunk [0x00007FFA4C267614+20]\n\tRtlUserThreadStart [0x00007FFA4C4E26B1+33]", "trace": "set_up = None\n\n    @allure.description(\"Test navigation bar\")\n    def test_navigation_bar(set_up):\n        options = webdriver.ChromeOptions()\n        options.add_experimental_option(\"detach\", True)\n        g = Service('C:\\\\PyCharmProjects\\\\1\\\\chromedriver.exe')\n        driver_g = webdriver.Chrome(options=options, service=g)\n        options.add_argument('--ignore-certificate-errors')\n        options.add_argument('--ignore-ssl-errors')\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n    \n        \"\"\"Pages\"\"\"\n        main_page = MainPage(driver_g)\n    \n        \"\"\"Test run\"\"\"\n>       main_page.refresh_via_top_logo()\n\ntests\\test_buy_laptop.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:100: in refresh_via_top_logo\n    self.click_main_page_link_top_logo()\npages\\main_page.py:55: in click_main_page_link_top_logo\n    self.get_main_page_link_top_logo().click()\npages\\main_page.py:30: in get_main_page_link_top_logo\n    return WebDriverWait(self.driver_g, 10).until(expected_conditions.element_to_be_clickable((By.XPATH, self. main_page_link_top_logo)))\nC:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:86: in until\n    value = method(self._driver)\nC:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:312: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\nC:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:861: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021E2A299750>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6D1CF67A3]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA4C267614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFA4C4E26B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=116.0.5845.111)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6D1D852A2+57122]\nE       \t(No symbol) [0x00007FF6D1CFEA92]\nE       \t(No symbol) [0x00007FF6D1BCE3AB]\nE       \t(No symbol) [0x00007FF6D1BAE1B9]\nE       \t(No symbol) [0x00007FF6D1C2B417]\nE       \t(No symbol) [0x00007FF6D1C3E24F]\nE       \t(No symbol) [0x00007FF6D1C26DB3]\nE       \t(No symbol) [0x00007FF6D1BFD2B1]\nE       \t(No symbol) [0x00007FF6D1BFE494]\nE       \tGetHandleVerifier [0x00007FF6D202EF82+2849794]\nE       \tGetHandleVerifier [0x00007FF6D2081D24+3189156]\nE       \tGetHandleVerifier [0x00007FF6D207ACAF+3160367]\nE       \tGetHandleVerifier [0x00007FF6D1E16D06+653702]\nE       \t(No symbol) [0x00007FF6D1D0A208]\nE       \t(No symbol) [0x00007FF6D1D062C4]\nE       \t(No symbol) [0x00007FF6D1D063F6]\nE       \t(No symbol) [0x00007FF6D1CF67A3]\nE       \tBaseThreadInitThunk [0x00007FFA4C267614+20]\nE       \tRtlUserThreadStart [0x00007FFA4C4E26B1+33]\n\nC:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: NoSuchWindowException"}, "description": "Test navigation bar", "steps": [{"name": "Click top logo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=116.0.5845.111)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6D1D852A2+57122]\n\t(No symbol) [0x00007FF6D1CFEA92]\n\t(No symbol) [0x00007FF6D1BCE3AB]\n\t(No symbol) [0x00007FF6D1BAE1B9]\n\t(No symbol) [0x00007FF6D1C2B417]\n\t(No symbol) [0x00007FF6D1C3E24F]\n\t(No symbol) [0x00007FF6D1C26DB3]\n\t(No symbol) [0x00007FF6D1BFD2B1]\n\t(No symbol) [0x00007FF6D1BFE494]\n\tGetHandleVerifier [0x00007FF6D202EF82+2849794]\n\tGetHandleVerifier [0x00007FF6D2081D24+3189156]\n\tGetHandleVerifier [0x00007FF6D207ACAF+3160367]\n\tGetHandleVerifier [0x00007FF6D1E16D06+653702]\n\t(No symbol) [0x00007FF6D1D0A208]\n\t(No symbol) [0x00007FF6D1D062C4]\n\t(No symbol) [0x00007FF6D1D063F6]\n\t(No symbol) [0x00007FF6D1CF67A3]\n\tBaseThreadInitThunk [0x00007FFA4C267614+20]\n\tRtlUserThreadStart [0x00007FFA4C4E26B1+33]\n\n", "trace": "  File \"C:\\PyCharmProjects\\1\\pages\\main_page.py\", line 100, in refresh_via_top_logo\n    self.click_main_page_link_top_logo()\n  File \"C:\\PyCharmProjects\\1\\pages\\main_page.py\", line 55, in click_main_page_link_top_logo\n    self.get_main_page_link_top_logo().click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\PyCharmProjects\\1\\pages\\main_page.py\", line 30, in get_main_page_link_top_logo\n    return WebDriverWait(self.driver_g, 10).until(expected_conditions.element_to_be_clickable((By.XPATH, self. main_page_link_top_logo)))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 86, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py\", line 312, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 861, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Veranika Rudzianok\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1693246407257, "stop": 1693246414388}], "attachments": [{"name": "stdout", "source": "35b20cd3-786a-447e-a238-69c2aaeeecda-attachment.txt", "type": "text/plain"}], "start": 1693246406207, "stop": 1693246414425, "uuid": "eb80e50e-46e7-448d-911d-48bb248e3e87", "historyId": "aad3e05216d21409dfe0e393970ce5af", "testCaseId": "aad3e05216d21409dfe0e393970ce5af", "fullName": "tests.test_buy_laptop#test_navigation_bar", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_laptop"}, {"name": "host", "value": "DESKTOP-K83B305"}, {"name": "thread", "value": "2408-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_laptop"}]}